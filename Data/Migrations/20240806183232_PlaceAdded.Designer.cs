// <auto-generated />
using System;
using System.Collections.Generic;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDatabaseContext))]
    [Migration("20240806183232_PlaceAdded")]
    partial class PlaceAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Schemes.FamilyMemberScheme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AboutMember")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("MiddleNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.ComplexProperty<Dictionary<string, object>>("Birth", "Data.Schemes.FamilyMemberScheme.Birth#Event", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.ComplexProperty<Dictionary<string, object>>("Place", "Data.Schemes.FamilyMemberScheme.Birth#Event.Place#Place", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("City")
                                        .HasMaxLength(128)
                                        .HasColumnType("nvarchar(128)");

                                    b2.Property<Point>("Coordinates")
                                        .HasColumnType("geometry");

                                    b2.Property<string>("Country")
                                        .HasMaxLength(128)
                                        .HasColumnType("nvarchar(128)");
                                });
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Death", "Data.Schemes.FamilyMemberScheme.Death#Event", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.ComplexProperty<Dictionary<string, object>>("Place", "Data.Schemes.FamilyMemberScheme.Death#Event.Place#Place", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("City")
                                        .HasMaxLength(128)
                                        .HasColumnType("nvarchar(128)");

                                    b2.Property<Point>("Coordinates")
                                        .HasColumnType("geometry");

                                    b2.Property<string>("Country")
                                        .HasMaxLength(128)
                                        .HasColumnType("nvarchar(128)");
                                });
                        });

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("FamilyMembers", (string)null);
                });

            modelBuilder.Entity("Data.Schemes.FamilyScheme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("Data.Schemes.FamilyMemberScheme", b =>
                {
                    b.HasOne("Data.Schemes.FamilyScheme", null)
                        .WithMany()
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
